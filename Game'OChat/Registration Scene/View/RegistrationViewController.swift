//
//  RegistrationViewController.swift
//  Game'OChat
//
//  Created by Roushil singla on 2/11/20.
//  Copyright (c) 2020 personal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegistrationViewControllerInput: class {
    func display(viewModel: Registration.Fetch.ViewModel)
}

protocol RegistrationViewControllerOutput {
    func fetch(request: Registration.Fetch.Request)
}

class RegistrationViewController: UIViewController {
    
    var output: RegistrationViewControllerOutput!
    var router: (NSObjectProtocol & RegistrationRoutingLogic & RegistrationDataPassing)!
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        configure()
    }
    
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        configure()
    }
    
    private func configure(){
        RegistrationConfigurator.configure(viewController: self)
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK:- IBOutlet properties
    @IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var profileImageView: UIImageView!
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        profileImageView.image = UIImage(named: "blank_profile")
        uploadProfileImage()
    }
    
    
    @IBAction func registerUser(_ sender: Any) {
        
        guard let name = nameTextField.text,let email = emailTextField.text,let password = passwordTextField.text, let profileImage = profileImageView.image else { return }
        output.fetch(request: Registration.Fetch.Request(registerData: RegisterData(name: name, email: email, password: password, profileImage: profileImage), viewcontroller: self))
    }
    
}

extension RegistrationViewController: RegistrationViewControllerInput {
    
    func display(viewModel: Registration.Fetch.ViewModel) {
        
    }
}

extension RegistrationViewController{
    
    func uploadProfileImage(){
        
        profileImageView.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(uploadImage)))
        profileImageView.isUserInteractionEnabled = true
    }
}

extension RegistrationViewController: UIImagePickerControllerDelegate, UINavigationControllerDelegate{
    
    @objc func uploadImage(){
        
        let picker = UIImagePickerController()
        picker.allowsEditing = true
        picker.delegate = self
        present(picker, animated: true, completion: nil)
    }
    
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        
        var selectedImage: UIImage?
        
        if let editedImage = info[UIImagePickerController.InfoKey.editedImage] as? UIImage{
            selectedImage = editedImage
        } else if let originalImage = info[UIImagePickerController.InfoKey.originalImage] as? UIImage{
            selectedImage = originalImage
        }
        profileImageView.contentMode = .scaleAspectFill
        profileImageView.image = selectedImage
        dismiss(animated: true, completion: nil)

    }
    
}

